class Solution {
    public int[] finalPrices(int[] prices) {
        int n=prices.length;
        for(int i=0;i<n;i++){
           for(int j=i+1;j<n;j++){
            if(prices[j]<=prices[i]){
                prices[i]-=prices[j];
                break;
            }
        } 
        }
    return prices;}
}
//8,4,6,2,3
--------------------------------
opt:
class Solution {
    public int[] finalPrices(int[] prices) {
        int n=prices.length;
        Stack<Integer>st=new Stack();
        for(int i=0;i<n;i++){
            while(!st.isEmpty() && prices[st.peek()]>=prices[i]){
                prices[st.pop()]-=prices[i];
            }
            st.push(i);
        }
    return prices;}
}
/*
8,4,6,2,3
stack:
0
*/
