class Solution {
    public boolean isBalanced(TreeNode root) {
        //nlogn
          if(root==null)return true;
        return Math.abs(height(root.left)-height(root.right))<=1 && isBalanced(root.left)&&isBalanced(root.right);
    }
    int height(TreeNode root){
        if(root==null)return 0;
        return 1+Math.max(height(root.left),height(root.right));
    }
}
-------------------------------------------------
class Solution {
    public boolean isBalanced(TreeNode root) {
        //n
          if(root==null)return true;
        return height(root)!=-1;
    }
    int height(TreeNode root){
        if(root==null)return 0;
        int left=height(root.left);
        int right=height(root.right);
        if(left==-1 || right==-1|| Math.abs(left-right)>1)return -1;
        return 1+Math.max(left,right);
    }
}
