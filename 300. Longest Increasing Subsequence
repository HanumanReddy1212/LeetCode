class Solution {
//dp,o(n2)
    public int lengthOfLIS(int[] nums) {
        int len=nums.length,maxlen=1;
        int dp[]=new int[len];
        Arrays.fill(dp,1);
        for(int i=1;i<len;i++){
           for(int j=0;j<i;j++){
            if(nums[i]>nums[j]){
               dp[i]=Math.max(dp[i],1+dp[j]);
                maxlen=Math.max(maxlen, dp[i]);
            }
        } 
        }
    return len==0?0:maxlen;}
}
----------------------------------------
class Solution {
//treeset,nlogn
    public int lengthOfLIS(int[] nums) {
        TreeSet<Integer>tree=new TreeSet();
        for(int num:nums){
            Integer x=tree.ceiling(num);
            if(x!=null)tree.remove(x);
            tree.add(num);
        }
    return tree.size();}
}
