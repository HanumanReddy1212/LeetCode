/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        
        List<Double> res=new ArrayList();
        if(root==null)return res;
        Queue<TreeNode>q=new LinkedList();
        q.offer(root);
        double lvl_sum;
        while(!q.isEmpty()){
          
            lvl_sum=0;
            int size=q.size();
            for(int i=0;i<size;i++){
                  TreeNode curr=q.poll();
                lvl_sum+=curr.val;
           if(curr.left!=null)     q.offer(curr.left);
           if(curr.right!=null)       q.offer(curr.right);
            }
          Double avg=  lvl_sum/size;
            res.add(avg);
        }
  return res;  }
}
