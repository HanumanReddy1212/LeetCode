class Solution {
    public int countConsistentStrings(String allowed, String[] words) {
        boolean res[]=new boolean[26];
        int count=0;
        for(char c:allowed.toCharArray()){
            res[c-'a']=true;
        }
        boolean flag=false;
         for(String word:words){
            flag=true;
              for(char c:word.toCharArray()){
                  if(!res[c-'a']){
                      flag=false;
                      break;
                  }
           
             
                
        }
            if(flag)count++; 
                
        }
        
    return count;}
}
--------------
class Solution {
    public int countConsistentStrings(String allowed, String[] words) {
	// 1 <= letters.size() <= 26
	Set<Character> letters = new HashSet<>(allowed.length());
	for (char letter : allowed.toCharArray())
		letters.add(letter);

	int count = 0;
	for (String word : words) {
		boolean consistent = true;
		for (char letter : word.toCharArray()) {
			if (!letters.contains(letter)) {
				consistent = false;
				break;
			}
		}
		if (consistent)
			count++;
	}
	return count;
}
}
