class Solution {
    TreeNode pre=null;
   //global var approach
    int res=Integer.MAX_VALUE;
    public int getMinimumDifference(TreeNode root) {
        
         if(root==null)return 0;
        
        getMinimumDifference(root.left);
        
        if(pre!=null){
            res=Math.min(res,root.val-pre.val);
        }
        pre=root;
        getMinimumDifference(root.right);
        return res;
    }
}
--------------------------------
class Solution {
    public int getMinimumDifference(TreeNode root) {
        if(root==null)return 0;
        List<Integer>list=new ArrayList();
        dfs(root,list);
        int res=Integer.MAX_VALUE;
        for(int i=0;i<list.size()-1;i++){
            res=Math.min(res,Math.abs(list.get(i+1)-list.get(i)));
            
        }
        return res;
    }
    void dfs(TreeNode root,List<Integer>list){
         if(root==null)return ;
        dfs(root.left,list);
        list.add(root.val);
        dfs(root.right,list);
    }
}
